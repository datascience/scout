{{#partial "title"}}Scout - Advanced query{{/partial}} {{#partial
"NavQueryClass"}}active{{/partial}} {{#partial "content"}}
<div class="container">
	<div class="page-header">
		<h1>Query</h1>
	</div>

	<div class="row-fluid">
		<div class="span12" style="margin-bottom: 20px">
			<p>
				Select a pre-made question template or go to <a
					href="{{mustacheletPath}}/query/advanced">advanced query</a>.
			</p>
		</div>
	</div>
	<div class="row-fluid">
		<div class="well span3">
			<p>
				<strong>Query templates</strong>
			</p>
			<ul class="nav nav-list">
				{{#each questionTemplates}}
				<li id="template_{{id}}" class="template"><a
					href="#template={{id}}">{{title}}</a></li> {{/each}}
			</ul>
		</div>

		<div class="span9">
			<div id="question_template">
				<div class="alert alert-info">Select a question template</div>
			</div>
		</div>
	</div>

	<div class="row-fluid">
		<div id="resultList" class="span12"></div>
	</div>

</div>
{{/partial}} {{#partial "scripts"}}
<script type="text/javascript">

	var getTemplateId = function() {
		var templateId;
		var params = $.deparam.fragment(true);
		if (params && params.template) {
			templateId = params.template;
		}
		return templateId;
	};

	var updateTemplate = function() {
		console.log('updating template');
		var templateId = getTemplateId();
		if ('undefined' !== typeof templateId) {
			var templateLabel = $('#template_'+templateId);
				if(templateLabel) {
					
					if(!templateLabel.hasClass("active")) {
					$('.template').removeClass('active');
					templateLabel.addClass("active");
					
					var apiRequest = "{{contextPath}}/api/questiontemplate.json/"+templateId;
	
					$.getJSON(apiRequest, function(questionTemplate) {
						var template = Handlebars.templates['questionTemplate.hbs'];
						var html = template(questionTemplate);
						$('#question_template').html(html);
					});
				}
			} else {
				// TODO Warning
			}
		} else {
			$('.template').removeClass('active');
		}
	};
	
	$(window).bind('hashchange', function(e) {
		updateTemplate();
	});
	updateTemplate();
</script>
<script type="text/javascript">
	var paginator;
	var search = function() {
		var btn = $(this);
		btn.button('loading');
		
		var templateId = getTemplateId();
		if ('undefined' !== typeof templateId) {
			var apiRequest = "{{contextPath}}/api/questiontemplate.json/"+templateId;
			$.getJSON(apiRequest, function(questionTemplate) {
				var target = questionTemplate.target;
				var query = questionTemplate.sparql;
				// TODO initial bindings based on parameters

				var apiCountRequest = '{{contextPath}}/api/request.json/count/?target='
						+ target + '&query=' + encodeURIComponent(query);
				var jqxhr = $.getJSON(
								apiCountRequest,
								function(count) {
									var apiListRequest = '{{contextPath}}/api/request.json/list/?target='
											+ target
											+ '&query='
											+ encodeURIComponent(query);
									var template;

									if (target.toLowerCase() == 'entity_type') {
										template = 'type_list.hbs';
									} else if (target.toLowerCase() == 'property') {
										template = 'property_list_for_query.hbs';
									} else if (target.toLowerCase() == 'entity') {
										template = 'entity_list_for_query.hbs';
									} else if (target.toLowerCase() == 'property_value') {
										template = 'value_list_for_query.hbs';
									} else if (target.toLowerCase() == 'measurement') {
										template = 'measurement_list_for_query.hbs';
									}

									paginator = Paginator(count, apiListRequest, 20,
											template, '#resultList', '{{contextPath}}',
											'{{mustacheletPath}}');
									paginator.init();
									btn.button('reset');
									$('#createRequestButton').removeClass('disabled');
								});

				jqxhr.error(function() {
							$('#resultList').html("<div class='alert alert-error'>Error parsing SPARQL query</div>");
							btn.button('reset');
						});
			});
		} else {
			Window.alert("Please select a query template");
		}
		
		$("search_form").submit(function(e){
		    var form = $(this);
		    
		    // form.attr('action');
		    
		    search();
		    
		    return false;
		 });
	};

	$(document).ready(function(){
		var searchButton = $('#searchButton');
		searchButton.button();
		// searchButton.click(search);
		$('#createRequestButton').click(function(){
			var target = $("input[name='target']:checked").val();
			var query = $('#query').val();
			
			document.location = $.param.fragment("{{mustacheletPath}}/request/new", "target="+target+"&query="+query);
		});
	});
	
</script>
{{/partial}} {{> base}}
