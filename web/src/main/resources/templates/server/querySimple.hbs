{{#partial "title"}}Scout - Query{{/partial}} {{#partial
"NavQueryClass"}}active{{/partial}} {{#partial "content"}}
<div class="container">
	<div class="page-header">
		<h1>Query</h1>
	</div>

	<div class="row-fluid">
		<div class="col-md-12" style="margin-bottom: 20px">
			<p>
				Select a pre-made question template or go to <a
					href="{{mustacheletPath}}/query/advanced">advanced query</a>.
			</p>
		</div>
	</div>
	<div class="row-fluid">
		<div class="well col-md-3">
			<p>
				<strong>Query templates</strong>
			</p>
			<ul class="nav nav-list">
				{{#each questionTemplates}}
				<li id="template_{{id}}" class="template"><a
					href="#template={{id}}">{{title}}</a></li> {{/each}}
			</ul>
		</div>

		<div class="col-md-9">
			<div id="question_template">
				<div class="alert alert-info">Select a question template</div>
			</div>
		</div>
	</div>

	<div class="row-fluid">
		<div id="resultList" class="col-md-12"></div>
	</div>

</div>
{{/partial}} {{#partial "scripts"}}
<script type="text/javascript">

	var getTemplateId = function() {
		var templateId;
		var params = $.deparam.fragment(true);
		if (params && params.template) {
			templateId = params.template;
		}
		return templateId;
	};
	
	var parseBindings = function(form) {
		var form_inputs = form.serializeArray();
	    var bindings = new Array();
	    var i = 0;
	    
	    $.each(form_inputs, function(index, field) {
	    	var key = field.name;
	    	var value = field.value;
	    	
	    	try {
		    	if(key.indexOf("node_") == 0) {
		    		var sparqlKey = key.substring(5);
		    		bindings[i++] = {name: 'binding', value: sparqlKey+'|'+value};
		    	} else if(key.indexOf("long-storagevolume-number_") == 0) {
		    		var sparqlKey = key.substring(26);
		    		var number = value;
		    		var unit = form_inputs[index+1].value;
		    		
		    		if(unit == 'MB') {
		    			number = number*1048576;
		    		} else if(unit == 'GB') {
		    			number = number*1073741824;
		    		} else if(unit == 'TB') {
		    			number = number*1099511627776;
		    		}
		    		
		    		bindings[i++] = {name: 'binding', value: sparqlKey+'|'+number};
		    	} else if(key.indexOf("long-storagevolume-unit_") == 0) {
		    		// parsed in above condition
		    	} else {
		    		console.log('Parameter not supported: '+key);
		    	}
	    	} catch(error) {
	    		console.log('Could not parse parameter: '+error);
	    	}
	    });
	    return bindings;
	};
	
	var overrideTemplateForm = function(e) {
	    var form = $(this);
	    var bindings = parseBindings(form);
	    search(bindings);
	    
	    return false;
	 };

	var createTrigger = function(templateId) {
		return function(e) {
			var button = $(this);
			if(!button.hasClass('disabled')) {
				var form = $("#search_form");
				var bindings = parseBindings(form);
				
				var queryBindings = $.param(bindings);
				
				if(queryBindings.length > 0) {
					queryBindings = '&'+queryBindings;
				}
				
				document.location = "{{mustacheletPath}}/request/new?template="+templateId+queryBindings;
			}
			return false;
		};
	};
	
	var updateTemplate = function() {
		var templateId = getTemplateId();
		if ('undefined' !== typeof templateId) {
			var templateLabel = $('#template_'+templateId);
				if(templateLabel) {
					
					if(!templateLabel.hasClass("active")) {
					$('.template').removeClass('active');
					templateLabel.addClass("active");
					
					var apiRequest = "{{contextPath}}/api/questiontemplate.json/"+templateId;
	
					$.getJSON(apiRequest, function(questionTemplate) {
						var template = Handlebars.templates['questionTemplate.hbs'];
						var html = template(questionTemplate);
						$('#question_template').html(html);
						
						$("#search_form").submit(overrideTemplateForm);
						$('#createRequestButton').click(createTrigger(templateId));
					});
				}
			} else {
				// TODO Warning
			}
		} else {
			$('.template').removeClass('active');
		}
	};
	
	$(window).bind('hashchange', function(e) {
		updateTemplate();
	});
	updateTemplate();
</script>
<script type="text/javascript">
	var paginator;
	var search = function(parameters) {
		var btn = $(this);
		btn.button('loading');
		
		var templateId = getTemplateId();
		if ('undefined' !== typeof templateId) {
			var apiRequest = "{{contextPath}}/api/questiontemplate.json/"+templateId;
			var jqxhr = $.getJSON(apiRequest, function(questionTemplate) {
				var target = questionTemplate.target;
				var query = questionTemplate.sparql;
				
				var bindings = $.param(parameters);
				
				if(bindings.length > 0) {
					bindings = '&'+bindings;
				}

				var apiCountRequest = '{{contextPath}}/api/request.json/count/?target='
						+ target + '&query=' + encodeURIComponent(query) + bindings;
				var jqxhr2 = $.getJSON(
								apiCountRequest,
								function(count) {
									var apiListRequest = '/api/request.json/list/?target='
											+ target
											+ '&query='
											+ encodeURIComponent(query) 
											+ bindings;
									var template;

									if (target.toLowerCase() == 'entity_type') {
										template = 'type_list.hbs';
									} else if (target.toLowerCase() == 'property') {
										template = 'property_list_for_query.hbs';
									} else if (target.toLowerCase() == 'entity') {
										template = 'entity_list_for_query.hbs';
									} else if (target.toLowerCase() == 'property_value') {
										template = 'value_list_for_query.hbs';
									} else if (target.toLowerCase() == 'measurement') {
										template = 'measurement_list_for_query.hbs';
									}

									paginator = Paginator(count, apiListRequest, 20,
											template, '#resultList', '{{contextPath}}',
											'{{mustacheletPath}}');
									paginator.init();
									btn.button('reset');
									$('#createRequestButton').removeClass('disabled');
								});

				jqxhr2.error(function() {
							$('#resultList').html("<div class='alert alert-error'>Error parsing SPARQL query</div>");
							btn.button('reset');
						});
			});
			jqxhr.error(function() {
				$('#resultList').html("<div class='alert alert-error'>Error getting query template</div>");
				btn.button('reset');
			});
		} else {
			Window.alert("Please select a query template");
		}
		
	};

	$(document).ready(function(){
		var searchButton = $('#searchButton');
		searchButton.button();
		// searchButton.click(search);
		$('#createRequestButton').click(function(){
			var target = $("input[name='target']:checked").val();
			var query = $('#query').val();
			
			document.location = $.param.fragment("{{mustacheletPath}}/request/new", "target="+target+"&query="+query);
		});
	});
	
</script>
{{/partial}} {{> base}}
